cor.test(nao.index.ncep, east_austria.tp$Data)
plot(1951:2010, nao.index.ncep, ty = "o", xlab = "year", ylab = "Standardized Value")
lines(1951:2010, scale(alp_austria.tp$Data), col = "red")
grid()
legend("bottomleft", c("NAO", "Winter Precip Anomaly"), lty = 1, col = c("black", "red"), bty = "n")
title(main = "Domain of Alpine Austria")
mtext(paste("Correlation =", round(cor(nao.index.ncep, alp_austria.tp$Data),3)))
cor.test(nao.index.ncep, alp_austria.tp$Data)
cor.test(nao.index.ncep_summer, east_austria.tp_summer$Data)
cor.test(nao.index.ncep_summer, alp_austria.tp_summer$Data)
library(knitr)
library(loadeR)
library(transformeR)
library(visualizeR)
library(downscaleR)
library(climate4R.climdex)
# Selecting predictand (y) and predictor (x)
data("VALUE_Iberia_pr","VALUE_Iberia_tas")
y <- VALUE_Iberia_tas
data("NCEP_Iberia_hus850", "NCEP_Iberia_psl", "NCEP_Iberia_ta850")
y
x <- makeMultiGrid(NCEP_Iberia_hus850, NCEP_Iberia_psl, NCEP_Iberia_ta850)
x <- scaleGrid(x, type = "standardize", spatial.frame = "field") # standardizing the predictor fields
spatialPlot(climatology(y), backdrop.theme = "countries", colorkey=T)
spatialPlot(climatology(x), backdrop.theme = "countries")
y
malaga.2000 <- subsetGrid(y,station.id = "000231",years = 2000)
temporalPlot(malaga.2000)
spatialPlot(climatology(y), backdrop.theme = "countries", colorkey=T)
spatialPlot(climatology(x), backdrop.theme = "countries")
data <- prepareData(x = x,
y = y,
global.vars = c("ta@850", "psl"),
spatial.predictors = list(v.exp = c(.95, .95)),
local.predictors = list(vars = "hus@850", n = 4))
analog <- downscale.train(data, method = "analogs", n.analogs = 1)
malaga.2000 <- subsetGrid(y,station.id = "000231",years = 2000)
pred.2000 <- subsetGrid(analog$pred,station.id = "000231",years = 2000)
temporalPlot(malaga.2000, pred.2000)
xT <- subsetGrid(x, years = 1983:1999)  # training predictors
yT <- subsetGrid(y, years = 1983:1999)   # training predictands
data <- prepareData(xT,yT)       # preparing the data
analog <- downscale.train(data, method = "analogs", n.analogs = 1)
xt <- subsetGrid(x, years = 2000)       # test predictors
newdata <- prepareNewData(xt,data)     # preparing the new predictors
pred  <- downscale.predict(newdata, analog)  # predicting
# visualizing the results
yt <- subsetGrid(y,years = 2000)
temporalPlot(pred,yt)
analog.cv <- downscale.cv(x = x, y = y, method = "analogs", n.analogs = 1, folds = 5,
spatial.predictors = list(v.exp = 0.95),
local.predictors = list(n = 4, vars = getVarNames(x)))
analog.cv
malaga.2000 <- subsetGrid(y,station.id = "000231",years = 2000)
temporalPlot(malaga.2000)
ncep.train <- subsetGrid(mg, years = 1983:1995)
ncep.train <- subsetGrid(x, years = 1983:1995)
ncep.test <- subsetGrid(x, years = 1996:2002)
obs.pred <- downscale(y = obs.train,
x = ncep.train,
newdata = ncep.test,
method = "analogs")
obs.train <- subsetGrid(y, years = 1983:1995)
obs.test <- subsetGrid(y, years = 1996:2002)
obs.pred <- downscale(y = obs.train,
x = ncep.train,
newdata = ncep.test,
method = "analogs")
obs.pred.monthly <- aggregateGrid(obs.pred, aggr.m = list(FUN = "sum"))
obs.test.monthly <- aggregateGrid(obs.test, aggr.m = list(FUN = "sum"))
df <- cbind.data.frame("predicted" = obs.pred.monthly$Data[,1],
"observed" = obs.test.monthly$Data[,1])
plot(df$observed, df$predicted, ylab = "Predicted", xlab = "Observed")
grid()
modelo.reg <- lm(predicted ~ observed, data = df)
abline(reg = modelo.reg, col = "red")
title(obs.pred$Metadata$name[1])
mtext(paste("r2 =", round(summary(modelo.reg)$adj.r.squared, 2)))
obs.pred.monthly$Data
df <- cbind.data.frame("predicted" = obs.pred.monthly$Data[,4],
"observed" = obs.test.monthly$Data[,4])
plot(df$observed, df$predicted, ylab = "Predicted", xlab = "Observed")
grid()
modelo.reg <- lm(predicted ~ observed, data = df)
abline(reg = modelo.reg, col = "red")
title(obs.pred$Metadata$name[1])
mtext(paste("r2 =", round(summary(modelo.reg)$adj.r.squared, 2)))
df <- cbind.data.frame("predicted" = obs.pred.monthly$Data[,4],
"observed" = obs.test.monthly$Data[,4])
plot(df$observed, df$predicted, ylab = "Predicted", xlab = "Observed")
grid()
modelo.reg <- lm(predicted ~ observed, data = df)
abline(reg = modelo.reg, col = "red")
title(obs.pred$Metadata$name[4])
mtext(paste("r2 =", round(summary(modelo.reg)$adj.r.squared, 2)))
obs.pred.monthly <- aggregateGrid(obs.pred, aggr.m = list(FUN = "mean"))
obs.test.monthly <- aggregateGrid(obs.test, aggr.m = list(FUN = "mean"))
df <- cbind.data.frame("predicted" = obs.pred.monthly$Data[,4],
"observed" = obs.test.monthly$Data[,4])
plot(df$observed, df$predicted, ylab = "Predicted", xlab = "Observed")
grid()
modelo.reg <- lm(predicted ~ observed, data = df)
abline(reg = modelo.reg, col = "red")
title(obs.pred$Metadata$name[4])
mtext(paste("r2 =", round(summary(modelo.reg)$adj.r.squared, 2)))
n.stations <- getShape(obs.pred.monthly, "loc")
par(mfrow = c(3,4))
for (i in 1:n.stations) {
df <- cbind.data.frame("predicted" = obs.pred.monthly$Data[,i],
"observed" = obs.test.monthly$Data[,i])
plot(df$observed, df$predicted, ylab = "Predicho", xlab = "observado")
grid()
modelo.reg <- lm(predicted ~ observed, data = df)
abline(reg = modelo.reg, col = "red")
title(obs.pred$Metadata$name[i])
mtext(paste("r2 =", round(summary(modelo.reg)$adj.r.squared, 2)))
}
par(mfrow = c(1,1))
df <- cbind.data.frame("predicted" = obs.pred.monthly$Data[,5],
"observed" = obs.test.monthly$Data[,5])
plot(df$observed, df$predicted, ylab = "Predicted", xlab = "Observed")
grid()
modelo.reg <- lm(predicted ~ observed, data = df)
abline(reg = modelo.reg, col = "red")
title(obs.pred$Metadata$name[4])
mtext(paste("r2 =", round(summary(modelo.reg)$adj.r.squared, 2)))
df <- cbind.data.frame("predicted" = obs.pred.monthly$Data[,4],
"observed" = obs.test.monthly$Data[,4])
plot(df$observed, df$predicted, ylab = "Predicted", xlab = "Observed")
grid()
modelo.reg <- lm(predicted ~ observed, data = df)
abline(reg = modelo.reg, col = "red")
title(obs.pred$Metadata$name[4])
mtext(paste("r2 =", round(summary(modelo.reg)$adj.r.squared, 2)))
spatialPlot(climatology(y), backdrop.theme = "countries", colorkey=T)
spatialPlot(climatology(x), backdrop.theme = "countries")
obs.train.toulouse <- subsetGrid(obs.train, station.id = obs.train$Metadata$station_id[4], drop = FALSE)
predictor2 <- prepareData(x = ncep.train, y = obs.train.malaga,
global.vars = c("ta@850", "psl"),
spatial.predictors = list(v.exp = c(.95, .95)),
local.predictors = list(vars = "hus@850", n = 4))
obs.train.malaga <- subsetGrid(obs.train, station.id = obs.train$Metadata$station_id[4], drop = FALSE)
predictor2 <- prepareData(x = ncep.train, y = obs.train.malaga,
global.vars = c("ta@850", "psl"),
spatial.predictors = list(v.exp = c(.95, .95)),
local.predictors = list(vars = "hus@850", n = 4))
analog2 <- downscale.train(predictor2, method = "analogs", n.analogs = 1)
newdata2 <- prepareNewData(newdata = ncep.test,  data.structure = predictor2)
pred2  <- downscale.predict(newdata2, analog2)
obs.pred2.monthly <- aggregateGrid(pred2, aggr.m = list(FUN = "mean"))
df2 <- cbind.data.frame("predicted1" = obs.pred.monthly$Data[,4],
"predicted2" = obs.pred2.monthly$Data[,1],
"observed" = obs.test.monthly$Data[,4])
plot(df2$observed, df2$predicted1, ylab = "Predicted", xlab = "Observed", xlim = c(0,100), ylim = c(0,120), asp = 1)
points(df2$observed, df2$predicted2, col = "blue")
modelo.reg <- lm(predicted1 ~ observed, data = df2)
modelo.reg2 <- lm(predicted2 ~ observed, data = df2)
abline(reg = modelo.reg)
abline(reg = modelo.reg2, col = "blue")
title(obs.pred$Metadata$name[i])
mtext(side = 3, adj = 0, paste("r2 =", round(summary(modelo.reg)$adj.r.squared, 2)))
mtext(side = 3, adj = 1, paste("r2 =", round(summary(modelo.reg2)$adj.r.squared, 2)), col = "blue")
legend("bottomright", col = c("black", "blue"), c("Predictores \'globales\'", "Predictores locales"), lty = 1)
plot(df2$observed, df2$predicted1, ylab = "Predicted", xlab = "Observed", xlim = c(0,100), ylim = c(0,120), asp = 1)
points(df2$observed, df2$predicted2, col = "blue")
modelo.reg <- lm(predicted1 ~ observed, data = df2)
modelo.reg2 <- lm(predicted2 ~ observed, data = df2)
abline(reg = modelo.reg)
abline(reg = modelo.reg2, col = "blue")
title(obs.pred$Metadata$name[i])
mtext(side = 3, adj = 0, paste("r2 =", round(summary(modelo.reg)$adj.r.squared, 2)))
mtext(side = 3, adj = 1, paste("r2 =", round(summary(modelo.reg2)$adj.r.squared, 2)), col = "blue")
legend("bottomright", col = c("black", "blue"), c("Global Predictors", "Local Predictors"), lty = 1)
plot(df2$observed, df2$predicted1, ylab = "Predicted", xlab = "Observed", xlim = c(0,100), ylim = c(0,120), asp = 1)
points(df2$observed, df2$predicted2, col = "blue")
modelo.reg <- lm(predicted1 ~ observed, data = df2)
modelo.reg2 <- lm(predicted2 ~ observed, data = df2)
abline(reg = modelo.reg)
abline(reg = modelo.reg2, col = "blue")
title(obs.pred$Metadata$name[4])
mtext(side = 3, adj = 0, paste("r2 =", round(summary(modelo.reg)$adj.r.squared, 2)))
mtext(side = 3, adj = 1, paste("r2 =", round(summary(modelo.reg2)$adj.r.squared, 2)), col = "blue")
legend("bottomright", col = c("black", "blue"), c("Global Predictors", "Local Predictors"), lty = 1)
ncep.train <- subsetGrid(x, years = 1983:1995)
ncep.test <- subsetGrid(x, years = 1996:2002)
data("VALUE_Iberia_pr","VALUE_Iberia_tas")
y <- VALUE_Iberia_pr
data("NCEP_Iberia_hus850", "NCEP_Iberia_psl", "NCEP_Iberia_ta850")
x <- makeMultiGrid(NCEP_Iberia_hus850, NCEP_Iberia_psl, NCEP_Iberia_ta850)
x <- scaleGrid(x, type = "standardize", spatial.frame = "field")
ncep.train <- subsetGrid(x, years = 1983:1995)
ncep.test <- subsetGrid(x, years = 1996:2002)
obs.train <- subsetGrid(y, years = 1983:1995)
obs.test <- subsetGrid(y, years = 1996:2002)
obs.pred <- downscale(y = obs.train,
x = ncep.train,
newdata = ncep.test,
method = "analogs")
obs.pred.monthly <- aggregateGrid(obs.pred, aggr.m = list(FUN = "sum"))
obs.test.monthly <- aggregateGrid(obs.test, aggr.m = list(FUN = "sum"))
df <- cbind.data.frame("predicted" = obs.pred.monthly$Data[,4],
"observed" = obs.test.monthly$Data[,4])
plot(df$observed, df$predicted, ylab = "Predicted", xlab = "Observed")
grid()
modelo.reg <- lm(predicted ~ observed, data = df)
abline(reg = modelo.reg, col = "red")
title(obs.pred$Metadata$name[4])
mtext(paste("r2 =", round(summary(modelo.reg)$adj.r.squared, 2)))
obs.train.malaga <- subsetGrid(obs.train, station.id = obs.train$Metadata$station_id[4], drop = FALSE)
predictor2 <- prepareData(x = ncep.train, y = obs.train.malaga,
global.vars = c("ta@850", "psl"),
spatial.predictors = list(v.exp = c(.95, .95)),
local.predictors = list(vars = "hus@850", n = 4))
analog2 <- downscale.train(predictor2, method = "analogs", n.analogs = 1)
newdata2 <- prepareNewData(newdata = ncep.test,  data.structure = predictor2)
pred2  <- downscale.predict(newdata2, analog2)
obs.pred2.monthly <- aggregateGrid(pred2, aggr.m = list(FUN = "sum"))
df2 <- cbind.data.frame("predicted1" = obs.pred.monthly$Data[,4],
"predicted2" = obs.pred2.monthly$Data[,1],
"observed" = obs.test.monthly$Data[,4])
plot(df2$observed, df2$predicted1, ylab = "Predicted", xlab = "Observed", xlim = c(0,100), ylim = c(0,120), asp = 1)
points(df2$observed, df2$predicted2, col = "blue")
modelo.reg <- lm(predicted1 ~ observed, data = df2)
modelo.reg2 <- lm(predicted2 ~ observed, data = df2)
abline(reg = modelo.reg)
abline(reg = modelo.reg2, col = "blue")
title(obs.pred$Metadata$name[4])
mtext(side = 3, adj = 0, paste("r2 =", round(summary(modelo.reg)$adj.r.squared, 2)))
mtext(side = 3, adj = 1, paste("r2 =", round(summary(modelo.reg2)$adj.r.squared, 2)), col = "blue")
legend("bottomright", col = c("black", "blue"), c("Global Predictors", "Local Predictors"), lty = 1)
predictor2 <- prepareData(x = ncep.train, y = obs.train.malaga,
global.vars = c("ta@850", "hus@850"),
spatial.predictors = list(v.exp = c(.95, .95)),
local.predictors = list(vars = "psl", n = 4))
analog2 <- downscale.train(predictor2, method = "analogs", n.analogs = 1)
newdata2 <- prepareNewData(newdata = ncep.test,  data.structure = predictor2)
pred2  <- downscale.predict(newdata2, analog2)
obs.pred2.monthly <- aggregateGrid(pred2, aggr.m = list(FUN = "sum"))
df2 <- cbind.data.frame("predicted1" = obs.pred.monthly$Data[,4],
"predicted2" = obs.pred2.monthly$Data[,1],
"observed" = obs.test.monthly$Data[,4])
plot(df2$observed, df2$predicted1, ylab = "Predicted", xlab = "Observed", xlim = c(0,100), ylim = c(0,120), asp = 1)
points(df2$observed, df2$predicted2, col = "blue")
modelo.reg <- lm(predicted1 ~ observed, data = df2)
modelo.reg2 <- lm(predicted2 ~ observed, data = df2)
abline(reg = modelo.reg)
abline(reg = modelo.reg2, col = "blue")
title(obs.pred$Metadata$name[4])
mtext(side = 3, adj = 0, paste("r2 =", round(summary(modelo.reg)$adj.r.squared, 2)))
mtext(side = 3, adj = 1, paste("r2 =", round(summary(modelo.reg2)$adj.r.squared, 2)), col = "blue")
legend("bottomright", col = c("black", "blue"), c("Global Predictors", "Local Predictors"), lty = 1)
predictor2 <- prepareData(x = ncep.train, y = obs.train.malaga,
global.vars = c("hus@850", "psl"),
spatial.predictors = list(v.exp = c(.95, .95)),
local.predictors = list(vars = "ta@85", n = 4))
predictor2 <- prepareData(x = ncep.train, y = obs.train.malaga,
global.vars = c("hus@850", "psl"),
spatial.predictors = list(v.exp = c(.95, .95)),
local.predictors = list(vars = "ta@850", n = 4))
analog2 <- downscale.train(predictor2, method = "analogs", n.analogs = 1)
newdata2 <- prepareNewData(newdata = ncep.test,  data.structure = predictor2)
pred2  <- downscale.predict(newdata2, analog2)
obs.pred2.monthly <- aggregateGrid(pred2, aggr.m = list(FUN = "sum"))
df2 <- cbind.data.frame("predicted1" = obs.pred.monthly$Data[,4],
"predicted2" = obs.pred2.monthly$Data[,1],
"observed" = obs.test.monthly$Data[,4])
plot(df2$observed, df2$predicted1, ylab = "Predicted", xlab = "Observed", xlim = c(0,100), ylim = c(0,120), asp = 1)
points(df2$observed, df2$predicted2, col = "blue")
modelo.reg <- lm(predicted1 ~ observed, data = df2)
modelo.reg2 <- lm(predicted2 ~ observed, data = df2)
abline(reg = modelo.reg)
abline(reg = modelo.reg2, col = "blue")
title(obs.pred$Metadata$name[4])
mtext(side = 3, adj = 0, paste("r2 =", round(summary(modelo.reg)$adj.r.squared, 2)))
mtext(side = 3, adj = 1, paste("r2 =", round(summary(modelo.reg2)$adj.r.squared, 2)), col = "blue")
legend("bottomright", col = c("black", "blue"), c("Global Predictors", "Local Predictors"), lty = 1)
predictor2 <- prepareData(x = ncep.train, y = obs.train.malaga,
global.vars = c("ta@850", "psl"),
spatial.predictors = list(v.exp = c(.95, .95)),
local.predictors = list(vars = "hus@850", n = 4))
analog2 <- downscale.train(predictor2, method = "analogs", n.analogs = 1)
newdata2 <- prepareNewData(newdata = ncep.test,  data.structure = predictor2)
pred2  <- downscale.predict(newdata2, analog2)
obs.pred2.monthly <- aggregateGrid(pred2, aggr.m = list(FUN = "sum"))
df2 <- cbind.data.frame("predicted1" = obs.pred.monthly$Data[,4],
"predicted2" = obs.pred2.monthly$Data[,1],
"observed" = obs.test.monthly$Data[,4])
plot(df2$observed, df2$predicted1, ylab = "Predicted", xlab = "Observed", xlim = c(0,100), ylim = c(0,120), asp = 1)
points(df2$observed, df2$predicted2, col = "blue")
modelo.reg <- lm(predicted1 ~ observed, data = df2)
modelo.reg2 <- lm(predicted2 ~ observed, data = df2)
abline(reg = modelo.reg)
abline(reg = modelo.reg2, col = "blue")
title(obs.pred$Metadata$name[4])
mtext(side = 3, adj = 0, paste("r2 =", round(summary(modelo.reg)$adj.r.squared, 2)))
mtext(side = 3, adj = 1, paste("r2 =", round(summary(modelo.reg2)$adj.r.squared, 2)), col = "blue")
legend("bottomright", col = c("black", "blue"), c("Global Predictors", "Local Predictors"), lty = 1)
spatialPlot(climatology(y), backdrop.theme = "countries", colorkey=T)
spatialPlot(climatology(x), backdrop.theme = "countries")
spatialPlot(climatology(y), backdrop.theme = "countries",
cuts = seq(1,8,1),
cex = 1.5, main = "Mean daily DJF precipitation (1983-2002)")
spatialPlot(climatology(x), backdrop.theme = "countries")
df <- cbind.data.frame("predicted" = obs.pred.monthly$Data[,4],
"observed" = obs.test.monthly$Data[,4])
plot(df$observed, df$predicted, ylab = "Predicted", xlab = "Observed")
grid()
modelo.reg <- lm(predicted ~ observed, data = df)
abline(reg = modelo.reg, col = "red")
title(obs.pred$Metadata$name[4])
mtext(paste("r2 =", round(summary(modelo.reg)$adj.r.squared, 2)))
plot(df2$observed, df2$predicted1, ylab = "Predicted", xlab = "Observed", xlim = c(0,100), ylim = c(0,120), asp = 1)
points(df2$observed, df2$predicted2, col = "blue")
modelo.reg <- lm(predicted1 ~ observed, data = df2)
modelo.reg2 <- lm(predicted2 ~ observed, data = df2)
abline(reg = modelo.reg)
abline(reg = modelo.reg2, col = "blue")
title(obs.pred$Metadata$name[4])
mtext(side = 3, adj = 0, paste("r2 =", round(summary(modelo.reg)$adj.r.squared, 2)))
mtext(side = 3, adj = 1, paste("r2 =", round(summary(modelo.reg2)$adj.r.squared, 2)), col = "blue")
legend("bottomright", col = c("black", "blue"), c("Global Predictors", "Local Predictors"), lty = 1)
predictor2 <- prepareData(x = ncep.train, y = obs.train.malaga,
global.vars = c("ta@850"),
spatial.predictors = list(v.exp = c(.95, .95)),
local.predictors = list(vars = c("hus@850","psl"), n = 4))
predictor2 <- prepareData(x = ncep.train, y = obs.train.malaga,
global.vars = c("ta@850"),
spatial.predictors = list(v.exp = .95),
local.predictors = list(vars = c("hus@850","psl"), n = 4))
analog2 <- downscale.train(predictor2, method = "analogs", n.analogs = 1)
newdata2 <- prepareNewData(newdata = ncep.test,  data.structure = predictor2)
pred2  <- downscale.predict(newdata2, analog2)
obs.pred2.monthly <- aggregateGrid(pred2, aggr.m = list(FUN = "sum"))
df2 <- cbind.data.frame("predicted1" = obs.pred.monthly$Data[,4],
"predicted2" = obs.pred2.monthly$Data[,1],
"observed" = obs.test.monthly$Data[,4])
plot(df2$observed, df2$predicted1, ylab = "Predicted", xlab = "Observed", xlim = c(0,100), ylim = c(0,120), asp = 1)
points(df2$observed, df2$predicted2, col = "blue")
modelo.reg <- lm(predicted1 ~ observed, data = df2)
modelo.reg2 <- lm(predicted2 ~ observed, data = df2)
abline(reg = modelo.reg)
abline(reg = modelo.reg2, col = "blue")
title(obs.pred$Metadata$name[4])
mtext(side = 3, adj = 0, paste("r2 =", round(summary(modelo.reg)$adj.r.squared, 2)))
mtext(side = 3, adj = 1, paste("r2 =", round(summary(modelo.reg2)$adj.r.squared, 2)), col = "blue")
legend("bottomright", col = c("black", "blue"), c("Global Predictors", "Local Predictors"), lty = 1)
predictor2 <- prepareData(x = ncep.train, y = obs.train.malaga,
global.vars = c("ta@850","hus@850"),
spatial.predictors = list(v.exp = c(.95,.95)),
local.predictors = list(vars = c("hus@850"), n = 4))
analog2 <- downscale.train(predictor2, method = "analogs", n.analogs = 1)
newdata2 <- prepareNewData(newdata = ncep.test,  data.structure = predictor2)
obs.pred2.monthly <- aggregateGrid(pred2, aggr.m = list(FUN = "sum"))
df2 <- cbind.data.frame("predicted1" = obs.pred.monthly$Data[,4],
"predicted2" = obs.pred2.monthly$Data[,1],
"observed" = obs.test.monthly$Data[,4])
plot(df2$observed, df2$predicted1, ylab = "Predicted", xlab = "Observed", xlim = c(0,100), ylim = c(0,120), asp = 1)
points(df2$observed, df2$predicted2, col = "blue")
modelo.reg <- lm(predicted1 ~ observed, data = df2)
modelo.reg2 <- lm(predicted2 ~ observed, data = df2)
abline(reg = modelo.reg)
abline(reg = modelo.reg2, col = "blue")
title(obs.pred$Metadata$name[4])
mtext(side = 3, adj = 0, paste("r2 =", round(summary(modelo.reg)$adj.r.squared, 2)))
mtext(side = 3, adj = 1, paste("r2 =", round(summary(modelo.reg2)$adj.r.squared, 2)), col = "blue")
legend("bottomright", col = c("black", "blue"), c("Global Predictors", "Local Predictors"), lty = 1)
predictor2 <- prepareData(x = ncep.train, y = obs.train.malaga,
global.vars = c("ta@850","hus@850"),
spatial.predictors = list(v.exp = c(.95,.95)),
local.predictors = list(vars = c("hus@850"), n = 4))
analog2 <- downscale.train(predictor2, method = "analogs", n.analogs = 1)
newdata2 <- prepareNewData(newdata = ncep.test,  data.structure = predictor2)
pred2  <- downscale.predict(newdata2, analog2)
obs.pred2.monthly <- aggregateGrid(pred2, aggr.m = list(FUN = "sum"))
df2 <- cbind.data.frame("predicted1" = obs.pred.monthly$Data[,4],
"predicted2" = obs.pred2.monthly$Data[,1],
"observed" = obs.test.monthly$Data[,4])
plot(df2$observed, df2$predicted1, ylab = "Predicted", xlab = "Observed", xlim = c(0,100), ylim = c(0,120), asp = 1)
points(df2$observed, df2$predicted2, col = "blue")
modelo.reg <- lm(predicted1 ~ observed, data = df2)
modelo.reg2 <- lm(predicted2 ~ observed, data = df2)
abline(reg = modelo.reg)
abline(reg = modelo.reg2, col = "blue")
title(obs.pred$Metadata$name[4])
mtext(side = 3, adj = 0, paste("r2 =", round(summary(modelo.reg)$adj.r.squared, 2)))
mtext(side = 3, adj = 1, paste("r2 =", round(summary(modelo.reg2)$adj.r.squared, 2)), col = "blue")
legend("bottomright", col = c("black", "blue"), c("Global Predictors", "Local Predictors"), lty = 1)
predictor2 <- prepareData(x = ncep.train, y = obs.train.malaga,
global.vars = c("ta@850","slp"),
spatial.predictors = list(v.exp = c(.95,.95)),
local.predictors = list(vars = c("hus@850"), n = 4))
predictor2 <- prepareData(x = ncep.train, y = obs.train.malaga,
global.vars = c("ta@850","psl"),
spatial.predictors = list(v.exp = c(.95,.95)),
local.predictors = list(vars = c("hus@850"), n = 4))
analog2 <- downscale.train(predictor2, method = "analogs", n.analogs = 1)
pred2  <- downscale.predict(newdata2, analog2)
obs.pred2.monthly <- aggregateGrid(pred2, aggr.m = list(FUN = "sum"))
df2 <- cbind.data.frame("predicted1" = obs.pred.monthly$Data[,4],
"predicted2" = obs.pred2.monthly$Data[,1],
"observed" = obs.test.monthly$Data[,4])
plot(df2$observed, df2$predicted1, ylab = "Predicted", xlab = "Observed", xlim = c(0,100), ylim = c(0,120), asp = 1)
points(df2$observed, df2$predicted2, col = "blue")
modelo.reg <- lm(predicted1 ~ observed, data = df2)
modelo.reg2 <- lm(predicted2 ~ observed, data = df2)
abline(reg = modelo.reg)
abline(reg = modelo.reg2, col = "blue")
title(obs.pred$Metadata$name[4])
mtext(side = 3, adj = 0, paste("r2 =", round(summary(modelo.reg)$adj.r.squared, 2)))
mtext(side = 3, adj = 1, paste("r2 =", round(summary(modelo.reg2)$adj.r.squared, 2)), col = "blue")
legend("bottomright", col = c("black", "blue"), c("Global Predictors", "Local Predictors"), lty = 1)
predictor2 <- prepareData(x = ncep.train, y = obs.train.malaga,
global.vars = c("ta@850","psl"),
spatial.predictors = list(v.exp = c(.95,.95)),
local.predictors = list(vars = c("hus@850"), n = 4))
analog2 <- downscale.train(predictor2, method = "analogs", n.analogs = 1)
newdata2 <- prepareNewData(newdata = ncep.test,  data.structure = predictor2)
pred2  <- downscale.predict(newdata2, analog2)
obs.pred2.monthly <- aggregateGrid(pred2, aggr.m = list(FUN = "sum"))
df2 <- cbind.data.frame("predicted1" = obs.pred.monthly$Data[,4],
"predicted2" = obs.pred2.monthly$Data[,1],
"observed" = obs.test.monthly$Data[,4])
plot(df2$observed, df2$predicted1, ylab = "Predicted", xlab = "Observed", xlim = c(0,100), ylim = c(0,120), asp = 1)
points(df2$observed, df2$predicted2, col = "blue")
modelo.reg <- lm(predicted1 ~ observed, data = df2)
modelo.reg2 <- lm(predicted2 ~ observed, data = df2)
abline(reg = modelo.reg)
abline(reg = modelo.reg2, col = "blue")
title(obs.pred$Metadata$name[4])
mtext(side = 3, adj = 0, paste("r2 =", round(summary(modelo.reg)$adj.r.squared, 2)))
mtext(side = 3, adj = 1, paste("r2 =", round(summary(modelo.reg2)$adj.r.squared, 2)), col = "blue")
legend("bottomright", col = c("black", "blue"), c("Global Predictors", "Local Predictors"), lty = 1)
east_austria <- map.lines(lonLim = c(14.3,17.2), latLim = c(46.2,49.2), col = "green", lwd = 2)
alp_austria <- map.lines(lonLim = c(9,14), latLim = c(46,47.8), col = "blue", lwd = 2)
spatialPlot(climatology(eobs.precip),
backdrop.theme = "countries",
sp.layout = list(east_austria, alp_austria))
cor.test(nao.index.ncep, east_austria.tp$Data)
plot(1951:2010, nao.index.ncep, ty = "o", xlab = "year", ylab = "Standardized Value")
lines(1951:2010, scale(alp_austria.tp$Data), col = "red")
grid()
legend("bottomleft", c("NAO", "Winter Precip Anomaly"), lty = 1, col = c("black", "red"), bty = "n")
title(main = "Domain of Alpine Austria")
mtext(paste("Correlation =", round(cor(nao.index.ncep, alp_austria.tp$Data),3)))
cor.test(nao.index.ncep, alp_austria.tp$Data)
plot(1951:2010, nao.index.ncep_summer, ty = "o", xlab = "year", ylab = "Standardized Value")
lines(1951:2010, scale(east_austria.tp_summer$Data), col = "red")
grid()
legend("bottomleft", c("SNAO", "Summer Precip Anomaly"), lty = 1, col = c("black", "red"), bty = "n")
title(main = "Domain of East Austria")
mtext(paste("Correlation =", round(cor(nao.index.ncep_summer, east_austria.tp_summer$Data),3)))
cor.test(nao.index.ncep_summer, east_austria.tp_summer$Data)
plot(1951:2010, nao.index.ncep_summer, ty = "o", xlab = "year", ylab = "Standardized Value")
lines(1951:2010, scale(alp_austria.tp_summer$Data), col = "red")
grid()
legend("bottomleft", c("SNAO", "Summer Precip Anomaly"), lty = 1, col = c("black", "red"), bty = "n")
title(main = "Domain of Alp Austria")
mtext(paste("Correlation =", round(cor(nao.index.ncep_summer, alp_austria.tp_summer$Data),3)))
plot(1951:2010, nao.index.ncep, ty = "o", xlab = "year", ylab = "Standardized Value")
lines(1951:2010, scale(east_austria.tp$Data), col = "red")
grid()
legend("bottomleft", c("NAO", "Winter Precip Anomaly"), lty = 1, col = c("black", "red"), bty = "n")
title(main = "Domain of East Austria")
mtext(paste("Correlation =", round(cor(nao.index.ncep, east_austria.tp$Data),3)))
cor.test(nao.index.ncep, east_austria.tp$Data)
plot(1951:2010, nao.index.ncep, ty = "o", xlab = "year", ylab = "Standardized Value")
lines(1951:2010, scale(alp_austria.tp$Data), col = "red")
grid()
legend("bottomleft", c("NAO", "Winter Precip Anomaly"), lty = 1, col = c("black", "red"), bty = "n")
title(main = "Domain of Alpine Austria")
mtext(paste("Correlation =", round(cor(nao.index.ncep, alp_austria.tp$Data),3)))
nao <- PC2grid(pca1_summer, scale = TRUE, opp = TRUE)
nao.index.ncep_summer <- nao[["Data"]][1,,1,1]
years <- getYearsAsINDEX(ncep.psl_summer)
plot(years, nao.index.ncep_summer, ty = 'l', ylab = "SNAO Index", xlab = "year")
grid()
pos <- which(nao.index.ncep_summer > 0) ## Index of positive NAO years
neg <- setdiff(1:length(nao.index.ncep_summer), pos) ## Index of negative NAO years
points(years[pos], nao.index.ncep_summer[pos], pch = 19, col = "red")
points(years[neg], nao.index.ncep_summer[neg], pch = 19, col = "blue")
abline(h = 0, lty = 3)
title(main = "PC-based SNAO Index ")
snao <- PC2grid(pca1_summer, scale = TRUE, opp = TRUE)
snao.index.ncep_summer <- snao[["Data"]][1,,1,1]
years <- getYearsAsINDEX(ncep.psl_summer)
plot(years, snao.index.ncep_summer, ty = 'l', ylab = "SNAO Index", xlab = "year")
grid()
pos <- which(snao.index.ncep_summer > 0) ## Index of positive SNAO years
neg <- setdiff(1:length(snao.index.ncep_summer), pos) ## Index of negative SNAO years
points(years[pos], snao.index.ncep_summer[pos], pch = 19, col = "red")
points(years[neg], snao.index.ncep_summer[neg], pch = 19, col = "blue")
abline(h = 0, lty = 3)
title(main = "PC-based SNAO Index ")
plot(1951:2010, snao.index.ncep_summer, ty = "o", xlab = "year", ylab = "Standardized Value")
lines(1951:2010, scale(east_austria.tp_summer$Data), col = "red")
grid()
legend("bottomleft", c("SNAO", "Summer Precip Anomaly"), lty = 1, col = c("black", "red"), bty = "n")
title(main = "Domain of East Austria")
mtext(paste("Correlation =", round(cor(snao.index.ncep_summer, east_austria.tp_summer$Data),3)))
plot(1951:2010, nao.index.ncep_summer, ty = "o", xlab = "year", ylab = "Standardized Value")
lines(1951:2010, scale(alp_austria.tp_summer$Data), col = "red")
grid()
legend("bottomleft", c("SNAO", "Summer Precip Anomaly"), lty = 1, col = c("black", "red"), bty = "n")
title(main = "Domain of Alp Austria")
mtext(paste("Correlation =", round(cor(nao.index.ncep_summer, alp_austria.tp_summer$Data),3)))
plot(1951:2010, snao.index.ncep_summer, ty = "o", xlab = "year", ylab = "Standardized Value")
lines(1951:2010, scale(alp_austria.tp_summer$Data), col = "red")
grid()
legend("bottomleft", c("SNAO", "Summer Precip Anomaly"), lty = 1, col = c("black", "red"), bty = "n")
title(main = "Domain of Alp Austria")
mtext(paste("Correlation =", round(cor(snao.index.ncep_summer, alp_austria.tp_summer$Data),3)))
cor.test(snao.index.ncep_summer, alp_austria.tp_summer$Data)
